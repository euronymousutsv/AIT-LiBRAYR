<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DataSet1" targetNamespace="http://tempuri.org/DataSet1.xsd" xmlns:mstns="http://tempuri.org/DataSet1.xsd" xmlns="http://tempuri.org/DataSet1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="libraryConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="libraryConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.DataAccessLayer.Properties.Settings.GlobalReference.Default.libraryConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TabUserTableAdapter" GeneratorDataComponentClassName="TabUserTableAdapter" Name="TabUser" UserDataComponentName="TabUserTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="libraryConnectionString (Settings)" DbObjectName="library.dbo.TabUser" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillAll" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataAll" GeneratorSourceName="FillAll" GetMethodModifier="Public" GetMethodName="GetDataAll" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataAll" UserSourceName="FillAll">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[TabUser] WHERE (([UID] = @Original_UID) AND ([UserName] = @Original_UserName) AND ([Password] = @Original_Password) AND ([UserLevel] = @Original_UserLevel) AND ([UserEmail] = @Original_UserEmail))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_UserName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="UserName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UserLevel" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserLevel" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_UserEmail" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="UserEmail" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[TabUser] ([UserName], [Password], [UserLevel], [UserEmail]) VALUES (@UserName, @Password, @UserLevel, @UserEmail);
SELECT UID, UserName, Password, UserLevel, UserEmail FROM TabUser WHERE (UID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@UserName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="UserName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@UserLevel" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserLevel" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@UserEmail" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="UserEmail" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT UID, UserName, Password, UserLevel, UserEmail FROM dbo.TabUser</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[TabUser] SET [UserName] = @UserName, [Password] = @Password, [UserLevel] = @UserLevel, [UserEmail] = @UserEmail WHERE (([UID] = @Original_UID) AND ([UserName] = @Original_UserName) AND ([Password] = @Original_Password) AND ([UserLevel] = @Original_UserLevel) AND ([UserEmail] = @Original_UserEmail));
SELECT UID, UserName, Password, UserLevel, UserEmail FROM TabUser WHERE (UID = @UID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@UserName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="UserName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@UserLevel" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserLevel" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@UserEmail" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="UserEmail" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_UserName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="UserName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UserLevel" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserLevel" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_UserEmail" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="UserEmail" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="UID" ColumnName="UID" DataSourceName="library.dbo.TabUser" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@UID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="UID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="UID" DataSetColumn="UID" />
              <Mapping SourceColumn="UserName" DataSetColumn="UserName" />
              <Mapping SourceColumn="Password" DataSetColumn="Password" />
              <Mapping SourceColumn="UserLevel" DataSetColumn="UserLevel" />
              <Mapping SourceColumn="UserEmail" DataSetColumn="UserEmail" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="libraryConnectionString (Settings)" DbObjectName="library.dbo.TabUser" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByUserNamePassword" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="FillByUserNamePassword" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="FillByUserNamePassword">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        UID, UserName, Password, UserLevel, UserEmail
FROM            TabUser
WHERE        (UserName = @USERNAME) AND (Password = @PASSWORD)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="USERNAME" ColumnName="UserName" DataSourceName="library.dbo.TabUser" DataTypeServer="varchar(8)" DbType="AnsiString" Direction="Input" ParameterName="@USERNAME" Precision="0" ProviderType="VarChar" Scale="0" Size="8" SourceColumn="UserName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="PASSWORD" ColumnName="Password" DataSourceName="library.dbo.TabUser" DataTypeServer="varchar(30)" DbType="AnsiString" Direction="Input" ParameterName="@PASSWORD" Precision="0" ProviderType="VarChar" Scale="0" Size="30" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="libraryConnectionString (Settings)" DbObjectName="library.dbo.TabUser" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="ValidateUserLogin" GeneratorSourceName="FillByUserNamePassword" GetMethodModifier="Public" GetMethodName="ValidateUserLogin" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="ValidateUserLogin" UserSourceName="ValidateUserLogin">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        UID AS Expr1, UserName AS Expr2, Password AS Expr3, UserLevel AS Expr4, UserEmail AS Expr5, TabUser.*
FROM            TabUser
WHERE        (UserName = @USERNAME) AND (Password = @PASSWORD)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="USERNAME" ColumnName="UserName" DataSourceName="library.dbo.TabUser" DataTypeServer="varchar(8)" DbType="AnsiString" Direction="Input" ParameterName="@USERNAME" Precision="0" ProviderType="VarChar" Scale="0" Size="8" SourceColumn="Expr2" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="PASSWORD" ColumnName="Password" DataSourceName="library.dbo.TabUser" DataTypeServer="varchar(30)" DbType="AnsiString" Direction="Input" ParameterName="@PASSWORD" Precision="0" ProviderType="VarChar" Scale="0" Size="30" SourceColumn="Expr3" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DataSet1" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_UserDSName="DataSet1" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="DataSet1">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="TabUser" msprop:Generator_RowEvHandlerName="TabUserRowChangeEventHandler" msprop:Generator_RowDeletedName="TabUserRowDeleted" msprop:Generator_RowDeletingName="TabUserRowDeleting" msprop:Generator_RowEvArgName="TabUserRowChangeEvent" msprop:Generator_TablePropName="TabUser" msprop:Generator_RowChangedName="TabUserRowChanged" msprop:Generator_UserTableName="TabUser" msprop:Generator_RowChangingName="TabUserRowChanging" msprop:Generator_RowClassName="TabUserRow" msprop:Generator_TableClassName="TabUserDataTable" msprop:Generator_TableVarName="tableTabUser">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="UID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="UIDColumn" msprop:Generator_ColumnPropNameInRow="UID" msprop:Generator_UserColumnName="UID" msprop:Generator_ColumnVarNameInTable="columnUID" type="xs:int" />
              <xs:element name="UserName" msprop:Generator_ColumnPropNameInTable="UserNameColumn" msprop:Generator_ColumnPropNameInRow="UserName" msprop:Generator_UserColumnName="UserName" msprop:Generator_ColumnVarNameInTable="columnUserName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="8" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Password" msprop:Generator_ColumnPropNameInTable="PasswordColumn" msprop:Generator_ColumnPropNameInRow="Password" msprop:Generator_UserColumnName="Password" msprop:Generator_ColumnVarNameInTable="columnPassword">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="UserLevel" msprop:Generator_ColumnPropNameInTable="UserLevelColumn" msprop:Generator_ColumnPropNameInRow="UserLevel" msprop:Generator_UserColumnName="UserLevel" msprop:Generator_ColumnVarNameInTable="columnUserLevel" type="xs:int" />
              <xs:element name="UserEmail" msprop:Generator_ColumnPropNameInTable="UserEmailColumn" msprop:Generator_ColumnPropNameInRow="UserEmail" msprop:Generator_UserColumnName="UserEmail" msprop:Generator_ColumnVarNameInTable="columnUserEmail">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:TabUser" />
      <xs:field xpath="mstns:UID" />
    </xs:unique>
  </xs:element>
</xs:schema>